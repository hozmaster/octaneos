
++
++
++ Some inline notes ++
++
++


interesting....hmmm

3/25/2004:

here is some output from gcc from inline code.

scheduler_init:
        movl    $-1073741824, %eax
#APP
        movw $235,0
        movw %ax, 2

#NO_APP
        ret


++++ and then the actual code +++

void scheduler_init(void) {

  _load_tss_descriptor(0,0);

} // end of the function ++++

+++ and the define +++

#define __load_tss_helper(gdt_offset, tss_address, main_size, type) \
        __asm__ __volatile__(                                   \
                        "movw $" #main_size ",%1\n\t"           \
                        "movw %%ax, %2\n\t"                     \
                        :                                       \
                        : "a" (tss_address + 0xC0000000),       \
                          "m" (*(gdt_offset)),                  \
                          "m" (*(gdt_offset + 2))               \
        )



3/20/2004:

asm ( "statements" : output_registers : input_registers : clobbered_registers);



a        eax
b        ebx
c        ecx
d        edx
S        esi
D        edi
I        constant value (0 to 31)
q,r      dynamically allocated register (see below)
g        eax, ebx, ecx, edx or variable in memory
A        eax and edx combined into a 64-bit integer (use long longs)


If a register is used in asm, and not present in input or output
you must use a clobbered register
